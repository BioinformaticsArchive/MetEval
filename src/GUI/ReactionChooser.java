/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ReactionChooser.java
 *
 * Created on Sep 22, 2011, 8:18:51 PM
 */
package GUI;

import java.util.LinkedList;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import meteval.types.Reaction;

/**
 *
 * @author gieku
 */
public class ReactionChooser extends javax.swing.JDialog {

    /** Creates new form ReactionChooser */
    public ReactionChooser(java.awt.Frame parent, LinkedList<Reaction> reactions) {
        super(parent, true);
        initComponents();
        this.setVisible(true);
        this.reactions = reactions;
        populateComponents();
    }
     public ReactionChooser(java.awt.Frame parent, LinkedList<Reaction> reactions,String title) {
        super(parent, true);
        this.setTitle(title);
        initComponents();
        this.reactions = reactions;
        populateComponents();
        this.setVisible(true);
        
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        reactList = new javax.swing.JList();
        filterTextfield = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        filterButton = new javax.swing.JButton();
        selectButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Choose reaction");

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        reactList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        reactList.setName("reactList"); // NOI18N
        reactList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                reactListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(reactList);

        filterTextfield.setName("filterTextfield"); // NOI18N

        jLabel1.setText("Involves compound");
        jLabel1.setName("jLabel1"); // NOI18N

        filterButton.setText("Filter");
        filterButton.setName("filterButton"); // NOI18N
        filterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filterButtonMouseClicked(evt);
            }
        });

        selectButton.setText("Select");
        selectButton.setName("selectButton"); // NOI18N
        selectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectButtonMouseClicked(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelButtonMouseClicked(evt);
            }
        });

        jButton1.setText("Clear filter");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(selectButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(filterButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(filterTextfield))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(filterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(filterButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancelButton)
                            .addComponent(selectButton))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reactListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_reactListValueChanged
        Reaction localSelected = (Reaction) reactList.getSelectedValue();
        if(localSelected != null){
            setSelected(localSelected);
        }
    }//GEN-LAST:event_reactListValueChanged

    private void cancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseClicked
        setSelected(null);
        this.dispose();
    }//GEN-LAST:event_cancelButtonMouseClicked

    private void selectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectButtonMouseClicked
        this.dispose();
    }//GEN-LAST:event_selectButtonMouseClicked

    private void filterButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filterButtonMouseClicked
        String compound = getComp();
        if(compound != null)filterList(compound);
        else filterOut();
    }//GEN-LAST:event_filterButtonMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        filterOut();
    }//GEN-LAST:event_jButton1MouseClicked
    private void filterList(String compound){
        DefaultListModel newModel = new DefaultListModel();
        reactList.setModel(newModel);
        for(Reaction reaction: reactions){
            if(matchFilter(reaction,compound))newModel.addElement(reaction);
        }
    }
    private boolean containsIgnoreCase(String base, String query){
        base = base.toLowerCase();
        query = query.toLowerCase();
        return base.contains(query);
    }
    private void filterOut(){
        this.populateComponents();
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ReactionChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ReactionChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ReactionChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ReactionChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//
//            public void run() {
//                ReactionChooser dialog = new ReactionChooser(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton filterButton;
    private javax.swing.JTextField filterTextfield;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList reactList;
    private javax.swing.JButton selectButton;
    // End of variables declaration//GEN-END:variables
    private LinkedList<Reaction> reactions = new LinkedList<Reaction>();
    private void populateComponents() {
        DefaultListModel listModel = new DefaultListModel();
        reactList.setModel(listModel);
        for (Reaction reaction:reactions){
            listModel.addElement(reaction);
        }
    }
    private void setSelected(Reaction reaction){
        selected = reaction;
    }
    private static  Reaction selected = null;
    public Reaction getSelected(){
        return selected;
    }
    public static Reaction showDialog(JFrame parent,LinkedList<Reaction> reactions, String title){
        ReactionChooser dialog = new ReactionChooser(parent,reactions,title);
        return selected;
    }

    private String getComp() {
        String input = this.filterTextfield.getText();
        return input;
    }

    private boolean matchFilter(Reaction reaction, String compound) {
        for(String comp:reaction.getInvolved()){
            if(containsIgnoreCase(comp,compound))return true;
        }
        return false;
    }
}
